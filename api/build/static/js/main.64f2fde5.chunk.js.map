{"version":3,"sources":["api.js","hooks/useCityList.js","components/Authenticate.js","utils.js","components/CitiesList.js","App.js","index.js"],"names":["apiGet","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","path","wrap","_context","prev","next","fetch","abrupt","sent","json","stop","_x","apply","this","arguments","apiPost","_ref2","_callee2","body","_context2","method","headers","Accept","Content-Type","JSON","stringify","_x2","_x3","getWeatherForCity","_ref3","_callee3","cityName","queryStringParam","_context3","concat","_x4","getCitiesForAccount","_ref4","_callee4","token","_context4","cities","_x5","addCityToAccount","_ref5","_callee5","city","_context5","_x6","_x7","removeCityFromAccount","_ref6","_callee6","_context6","_x8","_x9","signup","_ref7","_callee7","name","password","_context7","_x10","_x11","login","_ref8","_callee8","_context8","_x12","_x13","getAccount","_ref9","_callee9","_context9","_x14","useCityList","_useState","useState","_useState2","slicedToArray","setCities","_useState3","_useState4","error","setError","useEffect","t0","t1","addCity","cityWeather","find","_city","toConsumableArray","removeCity","filter","Authenticate","account","setAccount","setToken","persistCityList","nameRef","useRef","passwordRef","newAccountRef","onSubmit","e","isNewAccount","retrievedAccount","preventDefault","current","checked","value","console","log","tokens","react_default","createElement","className","onClick","ref","type","placeholder","id","htmlFor","say","string","window","speechSynthesis","SpeechSynthesisUtterance","speak","CitiesList","length","forEach","undefined","expect","temperature","cloudy","windy","citySummary","map","index","condition","summary","key","styles","animationDelay","App","localStorage","getItem","_setToken","cityInputRef","_useCityList","components_Authenticate","setItem","components_CitiesList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.64f2fde5.chunk.js","sourcesContent":["const apiGet = async (path) => (await fetch(path)).json();\nconst apiPost = async (path, body) => {\n  return (await fetch(path, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  })).json();\n}\n\nexport const getWeatherForCity = async (cityName) => {\n  const queryStringParam = cityName ? `?city=${cityName}` : '';\n  return await apiGet(`/v1/weather${queryStringParam}`);\n}\n\nexport const getCitiesForAccount = async (token) => (await apiGet(`/v1/accounts/${token}`)).cities;\nexport const addCityToAccount = async (city, token) => await apiPost(`/v1/accounts/${token}/cities`, { city });\nexport const removeCityFromAccount = async (city, token) => await apiPost(`/v1/accounts/${token}/cities/${city}/delete`);\n\nexport const signup = async (name, password) => await apiPost('/v1/accounts', { name, password });\nexport const login = async (name, password) => await apiPost('/v1/authenticate', { name, password });\nexport const getAccount = async (token) => await apiGet(`/v1/accounts/${token}`);\n","import { useState, useEffect } from 'react';\nimport { getWeatherForCity, getCitiesForAccount, addCityToAccount, removeCityFromAccount } from '../api.js';\n\nconst useCityList = (token) => {\n  const [cities, setCities] = useState([]);\n  const [ error, setError ] = useState(null);\n\n  // Load cities for account if user has a token\n  useEffect(\n    () => { (async () => { if (token) setCities(await getCitiesForAccount(token)) })() },\n    [token]\n  );\n\n  const addCity = async (city) => {\n    if (!city || cities.find(_city => _city.city === city)) return;\n    const cityWeather = await getWeatherForCity(city)\n    if (cityWeather.error) return setError(cityWeather.error);\n\n    setCities(prev => [...prev, cityWeather]);\n    if (token) addCityToAccount(city, token);\n  }\n\n  const removeCity = async (cityName) => {\n    setCities(prev => prev.filter(city => city.city !== cityName));\n    if (token) removeCityFromAccount(cityName, token);\n  }\n\n  return {\n    cities,\n    error,\n    addCity,\n    removeCity,\n  }\n}\n\nexport default useCityList;\n","import React, { useState, useRef } from 'react';\nimport { signup, login } from '../api.js';\n\nconst Authenticate = ({ account, setAccount, setToken, persistCityList }) => {\n  const [error, setError] = useState(null);\n  const nameRef = useRef();\n  const passwordRef = useRef();\n  const newAccountRef = useRef();\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const isNewAccount = newAccountRef.current ? newAccountRef.current.checked : null;\n    const name = nameRef.current ? nameRef.current.value : null;\n    const password = passwordRef.current ? passwordRef.current.value : null;\n    if (!name || !password) return;\n\n    let retrievedAccount;\n    if (isNewAccount) {\n      retrievedAccount = await signup(name, password);\n    } else {\n      retrievedAccount = await login(name, password);\n    }\n\n    console.log(retrievedAccount);\n    if (retrievedAccount.error) {\n      setError(retrievedAccount.error);\n      return;\n    }\n\n    if (retrievedAccount.token) setToken(retrievedAccount.token);\n    if (retrievedAccount.tokens) setToken(retrievedAccount.tokens[0]);\n    if (retrievedAccount.name) setAccount(retrievedAccount);\n  }\n\n\n  if (account && account.name) {\n    return (\n      <aside className='logged-in'>\n        <span>Logged in as {account.name}</span>\n        <button onClick={() => setToken(null)}>Logout</button>\n      </aside>\n    )\n  }\n\n  return (\n    <aside className='authenticate'>\n      { error && <p onClick={() => setError(null)}>{error}</p>}\n      <form onSubmit={onSubmit}>\n        <input ref={nameRef} type='text' placeholder='Account name...' />\n        <input ref={passwordRef} type='password' placeholder='Password...' />\n        <div>\n          <input ref={newAccountRef} id='signup' type='checkbox' />\n          <label htmlFor='signup'>This is a new account</label>\n        </div>\n        <button type='submit'>Authenticate</button>\n      </form>\n    </aside>\n  );\n};\n\nexport default Authenticate;\n","export const say = (string) => {\n  if (!window.speechSynthesis || !window.SpeechSynthesisUtterance) return;\n  speechSynthesis.speak(new SpeechSynthesisUtterance(string));\n}\n","import React from 'react';\nimport { say } from '../utils.js';\n\nconst citySummary = (city, includeCondition=false) => {\n  const { city: name, expect, temperature, cloudy, windy } = city;\n  return `Expect ${expect} in ${name}. It's ${temperature} outside, ${cloudy} cloudy, and ${windy} windy.`;\n}\n\nconst CitiesList = ({ cities, removeCity }) => (\n  <section className='cities-list-container'>\n    <header>\n      {!!cities.length && <button onClick={() => cities.forEach(city => say(citySummary(city, true)))}>Audio (All)</button>}\n    </header>\n    <main className='cities-list'>\n      { cities.map((city, index) => {\n        const { city: name, condition, expect, temperature, cloudy, windy } = city;\n        const summary = `Expect ${expect} in ${name}. It's ${temperature} outside, ${cloudy} cloudy, and ${windy} windy.`;\n        return (\n          <article key={name} className='city-card' styles={{ animationDelay: `${cities.length - index}s` }}>\n            <main>\n              <h2>{city.city}</h2>\n              <h3>{condition}</h3>\n              <p>{summary}</p>\n            </main>\n            <footer>\n              <button onClick={() => say(summary)}>Audio</button>\n              <button onClick={() => removeCity(city.city)}>Dismiss</button>\n            </footer>\n          </article>\n        );\n      })}\n    </main>\n  </section>\n);\n\nexport default CitiesList;\n","import React, { useState, useRef, useEffect } from 'react';\nimport useCityList from './hooks/useCityList.js';\nimport Authenticate from './components/Authenticate.js';\nimport CitiesList from './components/CitiesList.js';\nimport { getAccount } from './api.js';\nimport './App.css';\n\nconst App = () => {\n  const [token, _setToken] = useState(localStorage.getItem('token'));\n  const [account, setAccount] = useState(null);\n  const setToken = (token) => {\n    localStorage.setItem('token', token);\n    _setToken(token);\n  }\n\n  useEffect(() => {\n    if (token) {\n      (async () => setAccount(await getAccount(token)))();\n    } else {\n      setAccount(null);\n    }\n  }, [token]);\n\n  const cityInputRef = useRef();\n  const { cities, addCity, removeCity, persistCityList } = useCityList(token);\n\n  return (\n    <main className=\"app\">\n      <h1>Weather Peek</h1>\n      <p>A weather dashboard for folks who can't be bothered with pesky numbers.</p>\n      <p>Create a list of cities. Make an account to save your list and view it on any device.</p>\n      <Authenticate account={account} setAccount={setAccount} setToken={setToken} persistCityList={persistCityList} />\n      <form onSubmit={e => { e.preventDefault(); addCity(cityInputRef.current ? cityInputRef.current.value : null) }}>\n        <input ref={cityInputRef} type='text' placeholder='Enter city name...' />\n        <button type='submit'>Get weather for city</button>\n      </form>\n      <CitiesList cities={cities} removeCity={removeCity} />\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}